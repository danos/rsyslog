From a95bce28350ce192b5ccd5505ab790ad5e079f3b Mon Sep 17 00:00:00 2001
From: Rainer Gerhards <rgerhards@adiscon.com>
Date: Sat, 11 Jan 2020 17:59:42 +0100
Subject: [PATCH] testbench: modernize tests and make more robust in regard to
 timing

---
 tests/rcvr_fail_restore.sh           | 31 +++++++++++----------
 tests/sndrcv_gzip.sh                 |  2 --
 tests/sndrcv_tls_ossl_anon_rebind.sh | 20 ++++++-------
 tests/timereported-utc-vg.sh         | 54 ++----------------------------------
 tests/timereported-utc.sh            | 40 +++++---------------------
 5 files changed, 35 insertions(+), 112 deletions(-)

diff --git a/tests/rcvr_fail_restore.sh b/tests/rcvr_fail_restore.sh
index 7068e2b5c..de7aac4a2 100755
--- a/tests/rcvr_fail_restore.sh
+++ b/tests/rcvr_fail_restore.sh
@@ -1,14 +1,8 @@
 #!/bin/bash
 # Copyright (C) 2011 by Rainer Gerhards
-# This file is part of the rsyslog project, released  under GPLv3
+# This file is part of the rsyslog project, released under ASL 2.0
 . ${srcdir:=.}/diag.sh init
-
-uname
-if [ $(uname) = "FreeBSD" ] ; then
-   echo "This test currently does not work on FreeBSD."
-   exit 77
-fi
-
+skip_platform "FreeBSD"  "This test does not work on FreeBSD - problems with os utility option switches"
 #
 # STEP1: start both instances and send 1000 messages.
 # Note: receiver is instance 1, sender instance 2.
@@ -19,16 +13,16 @@ fi
 #export RSYSLOG_DEBUGLOG="log2"
 echo starting receiver
 generate_conf
-export PORT_RCVR="$(get_free_port)"
 add_conf '
-$ModLoad ../plugins/imtcp/.libs/imtcp
 # then SENDER sends to this port (not tcpflood!)
-$InputTCPServerRun '$PORT_RCVR'
+module(load="../plugins/imtcp/.libs/imtcp")
+input(type="imtcp" port="0" listenPortFileName="'$RSYSLOG_DYNNAME'.tcpflood_port" )
 
 $template outfmt,"%msg:F,58:2%\n"
 :msg, contains, "msgnum:" ./'$RSYSLOG_OUT_LOG';outfmt
 '
 startup
+export PORT_RCVR="$TCPFLOOD_PORT"
 #export RSYSLOG_DEBUG="debug nostdout"
 #export RSYSLOG_DEBUGLOG="log"
 #valgrind="valgrind"
@@ -83,9 +77,19 @@ ls -l ${RSYSLOG_DYNNAME}.spool
 
 #
 # Step 3: restart receiver, wait that the sender drains its queue
+$InputTCPServerRun '$PORT_RCVR'
 #
 echo step 3
 #export RSYSLOG_DEBUGLOG="log2"
+generate_conf
+add_conf '
+# then SENDER sends to this port (not tcpflood!)
+module(load="../plugins/imtcp/.libs/imtcp")
+input(type="imtcp" port="'$PORT_RCVR'")
+
+$template outfmt,"%msg:F,58:2%\n"
+:msg, contains, "msgnum:" ./'$RSYSLOG_OUT_LOG';outfmt
+'
 startup
 echo waiting for sender to drain queue [may need a short while]
 wait_queueempty 2
@@ -160,9 +164,8 @@ shutdown_when_empty
 wait_shutdown
 
 # now abort test if we need to (due to filesize predicate)
-if [ $NEWFILESIZE != $OLDFILESIZE ]
-then
-   exit 1
+if [ $NEWFILESIZE != $OLDFILESIZE ]; then
+	error_exit 1
 fi
 # do the final check
 seq_check 1 21010 -m 100
diff --git a/tests/sndrcv_gzip.sh b/tests/sndrcv_gzip.sh
index 367f6621c..d4eae7202 100755
--- a/tests/sndrcv_gzip.sh
+++ b/tests/sndrcv_gzip.sh
@@ -15,7 +15,6 @@ export QUEUE_EMPTY_CHECK_FUNC=empty_check
 
 #export RSYSLOG_DEBUG="debug nostdout noprintmutexaction"
 export RSYSLOG_DEBUGLOG="log"
-export RCVR_PORT="$(get_free_port)"
 generate_conf
 add_conf '
 # then SENDER sends to this port (not tcpflood!)
@@ -39,7 +38,6 @@ startup 2
 
 # now inject the messages into instance 2. It will connect to instance 1,
 # and that instance will record the data.
-#tcpflood -m$NUMMESSAGES
 injectmsg
 # shut down sender when everything is sent, receiver continues to run concurrently
 shutdown_when_empty 2
diff --git a/tests/sndrcv_tls_ossl_anon_rebind.sh b/tests/sndrcv_tls_ossl_anon_rebind.sh
index 82afb25cf..eed7e4057 100755
--- a/tests/sndrcv_tls_ossl_anon_rebind.sh
+++ b/tests/sndrcv_tls_ossl_anon_rebind.sh
@@ -3,7 +3,8 @@
 # testing sending and receiving via TLS with anon auth and rebind
 # This file is part of the rsyslog project, released under ASL 2.0
 . ${srcdir:=.}/diag.sh init
-
+export NUMMESSAGES=25000
+export QUEUE_EMPTY_CHECK_FUNC=wait_file_lines
 # debugging activated to try to solve https://github.com/rsyslog/rsyslog/issues/3256
 export RSYSLOG_DEBUG="debug nostdout"
 test_error_exit_handler() {
@@ -31,8 +32,8 @@ module(	load="../plugins/imtcp/.libs/imtcp"
 	StreamDriver.Name="ossl"
 	StreamDriver.Mode="1"
 	StreamDriver.AuthMode="anon" )
-input(	type="imtcp"
-	port="'$PORT_RCVR'" )
+# then SENDER sends to this port (not tcpflood!)
+input(type="imtcp" port="0" listenPortFileName="'$RSYSLOG_DYNNAME'.tcpflood_port" )
 
 template(name="outfmt" type="string" string="%msg:F,58:2%\n")
 :msg, contains, "msgnum:" action(	type="omfile" 
@@ -44,8 +45,10 @@ startup
 #sender
 export RSYSLOG_DEBUGLOG="$RSYSLOG_DYNNAME.sender.debuglog"
 #valgrind="valgrind"
+export PORT_RCVR=$TCPFLOOD_PORT
 generate_conf 2
 export TCPFLOOD_PORT="$(get_free_port)" # TODO: move to diag.sh
+echo TCPFLOOD_PORT new: $TCPFLOOD_PORT 
 add_conf '
 global(	
 	defaultNetstreamDriverCAFile="'$srcdir/tls-certs/ca.pem'"
@@ -57,10 +60,6 @@ global(
 )
 
 
-# Note: no TLS for the listener, this is for tcpflood!
-$ModLoad ../plugins/imtcp/.libs/imtcp
-$InputTCPServerRun '$TCPFLOOD_PORT'
-
 # set up the action
 $DefaultNetstreamDriver ossl # use gtls netstream driver
 $ActionSendStreamDriverMode 1 # require TLS for the connection
@@ -72,16 +71,15 @@ startup 2
 
 # now inject the messages into instance 2. It will connect to instance 1,
 # and that instance will record the data.
-tcpflood -m25000 -i1
-sleep 5 # make sure all data is received in input buffers
-# shut down sender when everything is sent, receiver continues to run concurrently
+injectmsg
 shutdown_when_empty 2
 wait_shutdown 2
 # now it is time to stop the receiver as well
 shutdown_when_empty
 wait_shutdown
 
-seq_check 1 25000 -d
+export SEQ_CHECK_OPTIONS=-d
+seq_check
 
 unset PORT_RCVR
 exit_test
diff --git a/tests/timereported-utc-vg.sh b/tests/timereported-utc-vg.sh
index 6a97a2fe0..9392f0ba8 100755
--- a/tests/timereported-utc-vg.sh
+++ b/tests/timereported-utc-vg.sh
@@ -1,54 +1,4 @@
 #!/bin/bash
 # addd 2016-03-22 by RGerhards, released under ASL 2.0
-. ${srcdir:=.}/diag.sh init
-generate_conf
-add_conf '
-$ModLoad ../plugins/imtcp/.libs/imtcp
-$InputTCPServerRun '$TCPFLOOD_PORT'
-
-template(name="outfmt" type="string"
-	 string="%timereported:::date-rfc3339,date-utc%\n")
-:msg, contains, "msgnum:" action(type="omfile" template="outfmt"
-			         file=`echo $RSYSLOG_OUT_LOG`)
-'
-
-echo "*** SUBTEST 2003 ****"
-rm -f $RSYSLOG_OUT_LOG	# do cleanup of previous subtest
-startup_vg
-tcpflood -m1 -M"\"<165>1 2003-08-24T05:14:15.000003-07:00 192.0.2.1 tcpflood 8710 - - msgnum:0000000\""
-shutdown_when_empty
-wait_shutdown_vg
-echo "2003-08-24T12:14:15.000003+00:00" | cmp - $RSYSLOG_OUT_LOG
-if [ ! $? -eq 0 ]; then
-  echo "invalid timestamps generated, $RSYSLOG_OUT_LOG is:"
-  cat $RSYSLOG_OUT_LOG
-  exit 1
-fi;
-
-echo "*** SUBTEST 2016 ****"
-rm -f $RSYSLOG_OUT_LOG	# do cleanup of previous subtest
-startup_vg
-tcpflood -m1 -M"\"<165>1 2016-03-01T12:00:00-02:00 192.0.2.1 tcpflood 8710 - - msgnum:0000000\""
-shutdown_when_empty
-wait_shutdown_vg
-echo "2016-03-01T14:00:00.000000+00:00" | cmp - $RSYSLOG_OUT_LOG
-if [ ! $? -eq 0 ]; then
-  echo "invalid timestamps generated, $RSYSLOG_OUT_LOG is:"
-  cat $RSYSLOG_OUT_LOG
-  exit 1
-fi;
-
-echo "*** SUBTEST 2016 (already in UTC) ****"
-rm -f $RSYSLOG_OUT_LOG	# do cleanup of previous subtest
-startup_vg
-tcpflood -m1 -M"\"<165>1 2016-03-01T12:00:00Z 192.0.2.1 tcpflood 8710 - - msgnum:0000000\""
-shutdown_when_empty
-wait_shutdown_vg
-echo "2016-03-01T12:00:00.000000+00:00" | cmp - $RSYSLOG_OUT_LOG
-if [ ! $? -eq 0 ]; then
-  echo "invalid timestamps generated, $RSYSLOG_OUT_LOG is:"
-  cat $RSYSLOG_OUT_LOG
-  exit 1
-fi;
-
-exit_test
+export USE_VALGRIND="YES"
+source ${srcdir:-.}/timereported-utc.sh
diff --git a/tests/timereported-utc.sh b/tests/timereported-utc.sh
index 9bac32ab3..6d2146a9d 100755
--- a/tests/timereported-utc.sh
+++ b/tests/timereported-utc.sh
@@ -1,6 +1,8 @@
 #!/bin/bash
 # addd 2016-03-22 by RGerhards, released under ASL 2.0
 . ${srcdir:=.}/diag.sh init
+export NUMMESSAGES=3
+export QUEUE_EMPTY_CHECK_FUNC=wait_file_lines
 generate_conf
 add_conf '
 module(load="../plugins/imtcp/.libs/imtcp")
@@ -11,46 +13,18 @@ template(name="outfmt" type="list") {
 	constant(value="\n")
 }
 :msg, contains, "msgnum:" action(type="omfile" template="outfmt"
-			         file=`echo $RSYSLOG_OUT_LOG`)
+			         file="'$RSYSLOG_OUT_LOG'")
 '
 
-echo "*** SUBTEST 2003 ****"
-rm -f $RSYSLOG_OUT_LOG	# do cleanup of previous subtest
 startup
 tcpflood -m1 -M"\"<165>1 2003-08-24T05:14:15.000003-07:00 192.0.2.1 tcpflood 8710 - - msgnum:0000000\""
-shutdown_when_empty
-wait_shutdown
-echo "2003-08-24T12:14:15.000003+00:00" | cmp - $RSYSLOG_OUT_LOG
-if [ ! $? -eq 0 ]; then
-  echo "invalid timestamps generated, $RSYSLOG_OUT_LOG is:"
-  cat $RSYSLOG_OUT_LOG
-  exit 1
-fi;
-
-echo "*** SUBTEST 2016 ****"
-rm -f $RSYSLOG_OUT_LOG	# do cleanup of previous subtest
-startup
 tcpflood -m1 -M"\"<165>1 2016-03-01T12:00:00-02:00 192.0.2.1 tcpflood 8710 - - msgnum:0000000\""
-shutdown_when_empty
-wait_shutdown
-echo "2016-03-01T14:00:00.000000+00:00" | cmp - $RSYSLOG_OUT_LOG
-if [ ! $? -eq 0 ]; then
-  echo "invalid timestamps generated, $RSYSLOG_OUT_LOG is:"
-  cat $RSYSLOG_OUT_LOG
-  exit 1
-fi;
-
-echo "*** SUBTEST 2016 (already in UTC) ****"
-rm -f $RSYSLOG_OUT_LOG	# do cleanup of previous subtest
-startup
 tcpflood -m1 -M"\"<165>1 2016-03-01T12:00:00Z 192.0.2.1 tcpflood 8710 - - msgnum:0000000\""
 shutdown_when_empty
 wait_shutdown
-echo "2016-03-01T12:00:00.000000+00:00" | cmp - $RSYSLOG_OUT_LOG
-if [ ! $? -eq 0 ]; then
-  echo "invalid timestamps generated, $RSYSLOG_OUT_LOG is:"
-  cat $RSYSLOG_OUT_LOG
-  exit 1
-fi;
 
+export EXPECTED="2003-08-24T12:14:15.000003+00:00
+2016-03-01T14:00:00.000000+00:00
+2016-03-01T12:00:00.000000+00:00"
+cmp_exact
 exit_test
-- 
2.11.0

